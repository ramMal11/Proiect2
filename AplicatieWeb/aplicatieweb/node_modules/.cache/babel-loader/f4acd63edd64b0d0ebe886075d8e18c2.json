{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ramona\\\\Personal\\\\Facultate\\\\Facultate\\\\Tehnologii Web\\\\Proiect\\\\aplicatieweb\\\\src\\\\components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useNavigate } from 'react-router'; // async function loginUser(userName, pwd) {\n//  return fetch(`http://localhost/7001/api/users/${userName}/${pwd}`, {\n//    method: 'GET'\n//  })\n//    .then(data => data.json())\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function loginUser(userName, pwd) {\n  console.log(userName + \"xxxx\");\n  console.log(pwd + \"yyyyy\");\n  return fetch(`http://localhost/7001/api/users/${userName}/${pwd}`, {\n    method: 'GET',\n    headers: {\n      \"Accept\": \"application/json\",\n      'Content-Type': 'application/json'\n    }\n  }).then(response => {\n    return response.json();\n  }).then(responseData => {\n    console.log(responseData);\n    return responseData;\n  }).then(data => {\n    this.setState({\n      \"questions\": data\n    });\n  }).catch(err => {\n    console.log(\"fetch error\" + err);\n  });\n}\n\nexport default function Login(_ref) {\n  _s();\n\n  let {\n    setToken\n  } = _ref;\n  const [username, setUserName] = useState();\n  const [password, setPassword] = useState();\n  console.log(username + \"bbbbb\");\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const token = await loginUser(username, password);\n    setToken(token);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Please Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => setUserName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"mDofyeUwpW7DCqzRlXtw6aPy/HU=\");\n\n_c = Login;\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Ramona/Personal/Facultate/Facultate/Tehnologii Web/Proiect/aplicatieweb/src/components/Login.js"],"names":["React","useState","PropTypes","useNavigate","loginUser","userName","pwd","console","log","fetch","method","headers","then","response","json","responseData","data","setState","catch","err","Login","setToken","username","setUserName","password","setPassword","handleSubmit","e","preventDefault","token","target","value","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {useNavigate} from 'react-router'\r\n\r\n// async function loginUser(userName, pwd) {\r\n//  return fetch(`http://localhost/7001/api/users/${userName}/${pwd}`, {\r\n//    method: 'GET'\r\n//  })\r\n//    .then(data => data.json())\r\n// }\r\n\r\nasync function loginUser(userName, pwd) {\r\n    console.log(userName + \"xxxx\")\r\n    console.log(pwd + \"yyyyy\")\r\n    return fetch(`http://localhost/7001/api/users/${userName}/${pwd}`, {\r\n        method: 'GET',\r\n        headers: {\r\n        \"Accept\": \"application/json\",\r\n        'Content-Type': 'application/json'\r\n        }\r\n    })\r\n    .then(response => { return response.json();})\r\n    .then(responseData => {console.log(responseData); return responseData;})\r\n    .then(data => {this.setState({\"questions\" : data});})\r\n\r\n    .catch(err => {\r\n        console.log(\"fetch error\" + err);\r\n    });\r\n   }\r\n\r\n\r\nexport default function Login({ setToken }) {\r\n  const [username, setUserName] = useState();\r\n  const [password, setPassword] = useState();\r\n  console.log(username + \"bbbbb\")\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const token = await loginUser(\r\n      username,\r\n      password\r\n    );\r\n    setToken(token);\r\n  }\r\n\r\n  \r\n  return(\r\n    <div className=\"login-wrapper\">\r\n      <h1>Please Log In</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          <p>Username</p>\r\n          <input type=\"text\" onChange={e => setUserName(e.target.value)} />\r\n        </label>\r\n        <label>\r\n          <p>Password</p>\r\n          <input type=\"text\" onChange={e => setPassword(e.target.value)} />\r\n        </label>\r\n        <div>\r\n          <button type=\"submit\">Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nLogin.propTypes = {\r\n  setToken: PropTypes.func.isRequired\r\n};"]},"metadata":{},"sourceType":"module"}